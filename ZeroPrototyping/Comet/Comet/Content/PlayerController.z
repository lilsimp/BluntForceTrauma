class PlayerController : ZilchComponent
{
    
    [Property]
    var LeftInput : Keys = Keys.A;
    
    [Property]
    var RightInput : Keys = Keys.D;
    
    [Property]
    var JumpInput : Keys = Keys.Space;
    
    [Property]
    var MaxSpeed : Real = 8;
    var MaxVelocity : Real3 = Real3(8, 0, 0);
    
    [Property]
    var Acceleration : Real = 0.2;
    
    [Property]
    var JumpAcceleration : Real = 4;
    [Property]
    var MaxJumpSpeed : Real = 100;
    
    var JumpTimer : Real = 0;
    var JumpCancel : Real = 1;
    var StopJumping : Boolean = false;
    var CanJump : Boolean = true;
        
    var HitZero : Integer = 2;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted,     this.OnCollisionStarted);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var vf = Real3(0,0,0);
        var acceleration = this.Acceleration;
        var v = this.Owner.RigidBody.Velocity;
        
        if(Zero.Keyboard.KeyIsDown(this.LeftInput) && this.Owner.RigidBody.Velocity.X > -this.MaxSpeed)
        {
            vf.X -= acceleration;
        }
        
        if(Zero.Keyboard.KeyIsDown(this.RightInput) && this.Owner.RigidBody.Velocity.X < this.MaxSpeed)
        {
            vf.X += acceleration;
        }
    
        if(this.CanJump == true)
        {
            if(Zero.Keyboard.KeyIsDown(Keys.Space) || Zero.Keyboard.KeyIsDown(this.JumpInput) && this.Owner.RigidBody.Velocity.Y < this.MaxSpeed)
            {
                vf.Y += this.JumpAcceleration;
                
                if(this.Owner.RigidBody.Velocity.Y > this.MaxJumpSpeed)
                {
                    this.CanJump = false;
                }
            }
        }      
        
        this.Owner.RigidBody.Velocity += vf;
    }
    
    function OnCollisionStarted(event : CollisionEvent)
    {
        var otherObject = event.OtherObject;
         
        if (otherObject.Name == "Ground")
        {
            this.CanJump = true;
        }
    }
}